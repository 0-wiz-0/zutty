#+TITLE: Automated testing of terminal emulators
#+OPTIONS: toc:nil num:nil val:nil html-style:nil H:1 ^:{}

By their very nature, graphical terminal emulators are interactive
programs. Therefore, testing them in an automated fashion (e.g., for
regression testing) can be tricky.

We employ a method suitable as a general means to automation, i.e., it
is independent of the terminal (does not require modifying the program
under test by e.g., implementing test hooks to inject events and read
screen content). This allows us to include several established
terminal emulators in the test along with Zutty, to see how they
compare.

Prerequisites:
- imagemagick (for convert & identify), wmctrl, xvkbd
  : apt-get install imagemagick wmctrl xvkbd

Steps:
- Start the terminal as a subprocess and note the pid
- Obtain its X window id
  : wmctrl -lp | grep <pid> | awk '{print $1}'
- use xvkbd to send events to the window:
  : xvkbd -window <id> -no-jump-pointer -text "\D3\{+1}\D3\{-1}\D3\{+Return}\D3\{-Return}\D3"
  Note the explicit keysym presses and releases, plus the interleaved delays.
  Ref: http://t-sato.in.coocan.jp/xvkbd/
- Make a screenshot of the window via the window id
  : xwd -nobdrs -id <id> | convert xwd:- png:- > <shot-name>.png
- Verify the screenshot content signature against a reference value:
  : identify -verbose <shot-name>.png | grep signature | awk '{print $2}' | cut -32
  (We cut the hash in half to make it less unwieldy.)
  Having consistent hashes that depend only on the rendered pixel
  image is convenient, as we do not need to store the reference images
  themselves.

The above is automated by some fairly straightforward bash scripts
under the =test/= subdirectory. To run a test automating a traversal
of Vttest's menu system (and in case of running against Zutty, also
verifying that results are as expected):
: ./test/vttest.sh

To run step-by-step (stopping at each image checkpoint), useful for debugging:
: ./test/vttest.sh --step

To run the tests against xterm:
: ./test/vttest.sh [--step] --profile=xterm

There are a number of profiles for setting up testing against various
other terminal emulators other than Zutty; these can be enumerated by
looking in =test/profiles/=. The list is also displayed in case an
invalid profile name is given.

There are other test scripts similar to =vttest.sh=, all building on
the same general infrastructure of sending X keyboard events and
making snapshots of the application window.
